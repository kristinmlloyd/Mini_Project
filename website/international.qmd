---
title: "Security Incidents Analysis: Global Patterns and Trends"
format: 
  html:
    code-fold: true
    toc: true
    toc-depth: 3
    number-sections: true
    theme: cosmo
    fig-width: 9
    fig-height: 6
    fig-dpi: 300
    self-contained: true
execute:
  warning: false
  message: false
---


<style>
.typing-line {
  font-family: monospace;
  overflow: hidden;
  white-space: nowrap;
  border-right: .15em solid #000;
  width: 0;
  display: block;
  animation: typing 2s steps(20, end) forwards;
  /* Only type, no infinite blinking */
}

.typing-line:nth-child(2) {
  animation-delay: 2s;
}

.typing-line:nth-child(3) {
  animation-delay: 4s;
}

.typing-line:nth-child(4) {
  animation-delay: 6s;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}
</style>

![](images/aid1.png)

```{python}
#| label: setup
#| include: false
#| echo: false

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import folium
from folium.plugins import MarkerCluster
from matplotlib.colors import LinearSegmentedColormap
import warnings
import plotly.express as px
import plotly.graph_objects as go
from IPython.display import display

plt.rcParams['figure.figsize'] = (10, 6)
warnings.filterwarnings('ignore', category=FutureWarning)
sns.set_theme(style="whitegrid")

palette = {"primary": "#FFBD59", "secondary": "#64C1FF", "danger": "#FF5252"}

df = pd.read_csv("data/security_incidents_cleaned.csv")
``` 

# Introduction

This part of the analysis provides a global overview of security incidents using data from the Aid Worker Security Database. We explore geographic and temporal trends and break down key variables used in the dataset to better understand patterns of violence against humanitarian personnel.

As will be demonstrated, the key findings from the global overview identified clear trending hotspots, and these are analyzed in deeper detail within individual country reports.

# Dataset Overview

```{python}
#| echo: false
#| label: dataset-overview

print(f"Dataset contains {len(df)} incidents across {df['country'].nunique()} countries")
print(f"Time period covered: {df['year'].min()} to {df['year'].max()}")
```

![](images/human3.png)

# Global Incident Distribution

Security incidents aren't distributed evenly across the world. Some regions experience higher concentrations due to various factors including geopolitical tensions, economic disparities, and historical conflicts. Visualizing this distribution helps us identify global patterns.

The map below displays incidents across the globe, with colors indicating the severity based on the number of people affected:

- Blue: No reported casualties
- Green: 1-5 affected individuals
- Orange: 6-20 affected individuals
- Red: More than 20 affected individuals

Clustering is used to manage dense areas where multiple incidents occurred in close proximity.

```{python}
#| label: incident-map-function
#| echo: false

def create_incidents_map(data):
    center_lat = data['latitude'].mean()
    center_lon = data['longitude'].mean()
    incidents_map = folium.Map(location=[center_lat, center_lon], zoom_start=2)
    marker_cluster = MarkerCluster().add_to(incidents_map)
    valid_coords = data[data['latitude'].notna() & data['longitude'].notna()]

    def get_color(affected):
        if pd.isna(affected) or affected == 0:
            return palette["secondary"]
        elif affected <= 5:
            return palette["primary"]
        elif affected <= 20:
            return "#FF9A3C"
        else:
            return palette["danger"]

    for _, row in valid_coords.iterrows():
        popup_text = f"""
        <b>Country:</b> {row['country']}<br>
        <b>Year:</b> {row['year']}<br>
        <b>Total Affected:</b> {row['total_affected']}<br>
        <b>Attack Type:</b> {row.get('means_of_attack', 'Unknown')}<br>
        """
        folium.CircleMarker(
            location=[row['latitude'], row['longitude']],
            radius=5,
            popup=folium.Popup(popup_text, max_width=300),
            fill=True,
            fill_opacity=0.7,
            color=get_color(row['total_affected']),
            fill_color=get_color(row['total_affected'])
        ).add_to(marker_cluster)

    return incidents_map
```

```{python}
#| label: create-global-map
#| echo: false

global_incidents_map = create_incidents_map(df)
global_incidents_map.save("images/global_security_incidents_map.html")
global_incidents_map
```

The interactive map reveals that incidents are highly concentrated in specific regions, especially across parts of Africa and the Middle East.

You can zoom in on specific regions and click on individual markers to get more details about each incident, such as the country, year, total affected, and attack type. 

# Temporal Trends

Security landscapes evolve over time. By examining how incident patterns change year by year, we can identify emerging hotspots and areas where security might be improving.

The animated choropleth map below shows how the distribution of security incidents has shifted over the years. Darker colors indicate higher numbers of incidents.

```{python}
#| label: incidents-choropleth
#| echo: false

incidents_by_year_country = df.groupby(['year', 'country']).size().reset_index(name='incidents')
year_totals = incidents_by_year_country.groupby('year')['incidents'].sum().reset_index().sort_values('year')

custom_colorscale = [
    [0, "#F99301"],
    [0.33, "#F56300"],
    [0.66, "#A1083B"],
    [1, "#541743"]
]

fig = px.choropleth(
    incidents_by_year_country,
    locations='country',
    locationmode='country names',
    color='incidents',
    animation_frame='year',
    color_continuous_scale=custom_colorscale,
    range_color=[0, incidents_by_year_country['incidents'].max()],
    height=600
)

fig.update_layout(
    title={
        'text': 'Security Incidents by Country Over Time',
        'y': 0.95,
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top',
        'font': {'size': 24}
    },
    coloraxis_colorbar=dict(title='Number of Incidents'),
    geo=dict(showframe=False, showcoastlines=True, projection_type='natural earth'),
    margin=dict(t=100)
)

fig.layout.updatemenus[0].buttons[0].args[1]['frame']['duration'] = 1000
fig.layout.updatemenus[0].buttons[0].args[1]['transition']['duration'] = 500

for i, year in enumerate(year_totals['year'].unique()):
    year_total = year_totals.loc[year_totals['year'] == year, 'incidents'].values[0]
    fig.frames[i].layout.annotations = [
        dict(
            x=0.5,
            y=0.87,
            xref='paper',
            yref='paper',
            text=f'Total Incidents in {year}: {year_total}',
            showarrow=False,
            font=dict(size=18)
        )
    ]

latest_year = year_totals['year'].max()
latest_total = year_totals.loc[year_totals['year'] == latest_year, 'incidents'].values[0]
fig.update_layout(annotations=[
    dict(
        x=0.5,
        y=0.87,
        xref='paper',
        yref='paper',
        text=f'Total Incidents in {latest_year}: {latest_total}',
        showarrow=False,
        font=dict(size=18)
    )
])

fig.write_html("images/interactive_incidents_over_time.html")
fig.show()
```

This visualization reveals several insights:

-   The global distribution of security incidents has shifted significantly over time
-   Some countries that were previously security hotspots have shown improvement
-   New areas of concern have emerged in recent years
-   The total number of recorded incidents shows notable year-to-year variation

You can use the play button to animate the map through time, or manually select specific years using the slider.

## Annual Trends at a Glance

The chart below offers a simpler view of yearly totals across all countries, showing how global incident volume has risen over time.

```{python}
#| label: yearly-incidents-bar
#| echo: false

year_incidents = df.groupby('year').size().reset_index(name='incidents')
year_incidents['year'] = year_incidents['year'].astype(str)

fig2 = px.bar(
    year_incidents,
    x='year',
    y='incidents',
    labels={'incidents': 'Number of Incidents', 'year': 'Year'},
    height=400
)

fig2.update_traces(marker_color=palette["primary"])

fig2.update_layout(
    title={
        'text': 'Security Incidents by Year',
        'y': 0.95,
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top'
    },
    xaxis=dict(rangeslider=dict(visible=True), type='category'),
    bargap=0.1,
    template='plotly_white'
)

fig2.write_html("images/interactive_yearly_incidents_barchart.html")
fig2.show()
```

The interactive bar chart shows:

- A general upward trend in reported incidents
- Distinct spikes likely linked to global conflicts or regional escalations
- Possible influence from improved data collection and reporting

Together, these visuals underscore how fluid the security landscape isâ€”and why real-time analysis and localized response strategies matter.

# Countries with Most Incidents: All-Time Analysis

First, let's look at which countries have experienced the most security incidents over the entire period covered by our dataset:

```{python}
#| label: top-countries-all-time
#| echo: false

total_by_country = df.groupby('country').size().reset_index(name='total_incidents')
total_by_country = total_by_country.sort_values('total_incidents', ascending=False)
top15_countries = total_by_country.head(8)

fig_top_all_time = px.bar(
    top15_countries,
    x='country',
    y='total_incidents',
    labels={'total_incidents': 'Number of Incidents', 'country': 'Country'},
    height=450
)

fig_top_all_time.update_traces(marker_color=palette["primary"])

fig_top_all_time.update_layout(
    title={
        'text': 'Top Countries by Security Incidents (All Time)',
        'y': 0.95,  # slightly lower
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top',
        'font': {'size': 15}
    },
    xaxis={'categoryorder': 'total descending', 'tickangle': 45},
    margin=dict(t=80)  # add top margin
)

fig_top_all_time.show()

fig_top_all_time.write_html("images/top_countries_all_time.html")
```

This visualization highlights the countries that have historically been most affected by security incidents. Several factors might contribute to a country appearing on this list:

-   Long-standing regional conflicts
-   Political instability
-   Higher population (which can increase the absolute number of incidents)
-   More comprehensive reporting of incidents

# Countries with Most Incidents: Recent Trends

Historical patterns don't always reflect current realities. To identify emerging security hotspots, we need to focus on more recent data. The following analysis examines incident patterns over the past 10 years:

```{python}
#| label: top-countries-recent
#| echo: false

current_year = df['year'].max()
ten_years_ago = current_year - 10
recent_df = df[df['year'] >= ten_years_ago]

recent_by_country = recent_df.groupby('country').size().reset_index(name='recent_incidents')
recent_by_country = recent_by_country.sort_values('recent_incidents', ascending=False)
top15_recent = recent_by_country.head(8)

fig_top_recent = px.bar(
    top15_recent,
    x='country',
    y='recent_incidents',
    labels={'recent_incidents': 'Number of Incidents', 'country': 'Country'},
    height=500
)

fig_top_recent.update_traces(marker_color=palette["primary"])

fig_top_recent.update_layout(
    title={
        'text': f'Top Countries by Security Incidents<br>(Last 10 Years: {ten_years_ago}â€“{current_year})',
        'y': 0.95,
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top',
        'font': {'size': 15}  # smaller font
    },
    xaxis={'categoryorder': 'total descending', 'tickangle': 45},
    margin=dict(t=100)
)

fig_top_recent.show()

fig_top_recent.write_html("images/top_countries_recent.html")
```

This recent trends analysis shows:

- Countries that have experienced deteriorating security situations in the past decade
- An Emerging hotspot (Mali) that did not appear in historical data

By comparing this visualization with the all-time analysis, we can identify significant shifts in global security patterns.

# Conclusion

This global analysis provides a comprehensive overview of the security challenges faced by humanitarian personnel across time and geography. By breaking down patterns in attack types, contexts, affected demographics, and organizational exposure, we gain insight into the evolving nature of these risks. While some regions remain persistent hotspots, new threats continue to emerge, underscoring the need for real-time monitoring and adaptive security strategies.

# Next Steps

## Analyze Individual Countries

- [Palestine](palestine.qmd)
- [Afghanistan](af.qmd)
- [DR Congo](dr.qmd)
- [Syria](syria.qmd)
- [Somalia](somolia.qmd)
- [Mali](mali.qmd)
- [South Sudan](southsudan.qmd)
- [Sudan](sudan.qmd)
































### delete 

# Global Breakdown Across Key Variables

Before diving into individual country profiles, we want to first examine global trends across the key variables in the datasetâ€”such as attack type, context, actor involvement, motive, etc. By analyzing these patterns at a global scale, we can establish an overall understanding of how security incidents are documented, what types of information are commonly missing or uncertain, and which trends emerge across countries. This foundation will help us better interpret the nuances of each country's data in the following sections.

## Types of Injuries and Their Contexts

Understanding how different attack types affect aid workers is crucial for response planning and preparedness. Each method of violenceâ€”whether gunfire, explosives, or abductionâ€”carries unique risks and medical implications.

```{python}
#| echo: false

attack_counts = df['means_of_attack'].value_counts().reset_index()
attack_counts.columns = ['Attack Type', 'Count']
attack_counts = attack_counts.sort_values('Count', ascending=False)

fig_attacks = px.bar(
    attack_counts,
    x='Attack Type',
    y='Count',
    title='Security Incidents by Attack Type',
    height=450
)

fig_attacks.update_traces(marker_color=palette["primary"])

fig_attacks.update_layout(
    xaxis_title=None,
    yaxis_title="Number of Incidents",
    xaxis={'categoryorder': 'total descending', 'tickangle': 45}
)

fig_attacks.show()

```

### Common Attack Types

- **Shooting**: Gunfire directed at individuals or vehicles, often during ambushes.

- **Kidnapping**: Abduction for ransom, leverage, or forced cooperation.

- **Bodily Assault**: Physical violence such as beatings.

- **Aerial Bombardment / Shelling**: Explosives from air or artillery that may strike aid targets.

- **Kidnap-Killing**: Abductions ending in execution.

- **Roadside / Vehicle-borne IEDs**: Explosives planted on roads or in cars.

- **Other Explosives**: Includes grenades, landmines, or suicide devices.

## Attack Contexts

Understanding the context of each security incident helps identify common risk environments and inform response planning. Ambushes and individual attacks are among the most frequent, while raids and detentions reflect more organized or prolonged threats. These distinctions guide preparedness strategies, from route planning to physical site protection.

```{python}
#| label: attack-contexts
#| echo: false
context_counts = df['attack_context'].value_counts().reset_index()
context_counts.columns = ['Attack Context', 'Count']

context_counts = context_counts.sort_values('Count', ascending=False)

fig_context = px.bar(
    context_counts,
    x='Attack Context',
    y='Count',
    title='Security Incidents by Attack Context',
    height=450
)

fig_context.update_traces(marker_color=palette["primary"])

fig_context.update_layout(
    xaxis_title=None,
    yaxis_title="Number of Incidents",
    xaxis={'categoryorder': 'total descending', 'tickangle': 45}
)

fig_context.show()
```

- **Combat/Crossfire**: Occurs when aid workers are caught between opposing armed groups during active fighting.

- **Ambush**: Sudden, premeditated attacksâ€”often while travelingâ€”posing high risk due to surprise and mobility.

- **Individual Attack**: Targeted violence against specific aid workers, often outside group or convoy settings.

- **Raid**: Coordinated intrusion into compounds or facilities with the intent to steal, intimidate, or harm.

- **Detention**: When personnel are heldâ€”formally or informallyâ€”by state or non-state actors, sometimes for leverage.

## Nationals vs. Internationals

Aid workers from local communities often face greater risks than their international counterparts. This visualization compares casualtiesâ€”killed, wounded, and kidnappedâ€”by staff category.

```{python}
#| echo: false
#| label: nationals-internationals

casualties_data = {
    'Category': ['Nationals', 'Internationals'],
    'Killed': [
        df['nationals_killed'].sum(),
        df['internationals_killed'].sum()
    ],
    'Wounded': [
        df['nationals_wounded'].sum(),
        df['internationals_wounded'].sum()
    ],
    'Kidnapped': [
        df['nationals_kidnapped'].sum(),
        df['internationals_kidnapped'].sum()
    ]
}

casualties_df = pd.DataFrame(casualties_data)
casualties_long = pd.melt(
    casualties_df,
    id_vars=['Category'],
    value_vars=['Killed', 'Wounded', 'Kidnapped'],
    var_name='Status',
    value_name='Count'
)

fig_casualties = px.bar(
    casualties_long,
    x='Category',
    y='Count',
    color='Status',
    title='Casualties by Nationality Category',
    barmode='stack',
    height=500,
    color_discrete_map={
        'Killed': palette["danger"], 
        'Wounded': palette["primary"], 
        'Kidnapped': palette["secondary"]
    }
)

fig_casualties.update_layout(
    xaxis_title=None,
    yaxis_title="Number of People",
    legend_title_text=None,
    title={
        'text': 'Casualties by Nationality Category',
        'y': 0.95,  # lower to avoid cutoff
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top',
        'font': {'size': 17}
    },
    margin=dict(t=80)  # add top margin
)

fig_casualties.show()

```

- **Nationals**: Local staff face the majority of casualties, likely due to higher numbers, greater exposure, and fewer protective resources.

- **Internationals**: Though better protected, they are often targeted for kidnapping due to political visibility or ransom value.

These differences emphasize the need for inclusive protection strategies tailored to both national and international aid workers.

### Factors Contributing to Disparity

1.  **Numbers and Exposure**: Locals far outnumber internationals in most areas
2.  **Access to Protection**: Internationals often have enhanced security measures and evacuation options
3.  **Targeting Patterns**: Some actors specifically avoid targeting internationals due to potential international consequences
4.  **Risk Profiles**: Internationals may have more restricted movement in high-threat areas

### Kidnapping Trends

-   Kidnapping represents a relatively small proportion of overall casualties
-   However, internationals face a disproportionate kidnapping risk in many contexts due to:
    -   Higher perceived ransom value
    -   Political leverage potential
    -   Media attention

### Location Trends

Certain locations are consistently more vulnerable to security incidents than others. This breakdown highlights where aid workers are most at risk.

```{python}
#| label: location
#| echo: false
context_counts = df['location'].value_counts().reset_index()
context_counts.columns = ['Location', 'Count']

context_counts = context_counts.sort_values('Count', ascending=False)

fig_context = px.bar(
    context_counts,
    x='Location',
    y='Count',
    title='Security Incidents by Location',
    height=450
)

fig_context.update_traces(marker_color=palette["primary"])

fig_context.update_layout(
    xaxis_title=None,
    yaxis_title="Number of Incidents",
    xaxis={'categoryorder': 'total descending', 'tickangle': 45}
)

fig_context.show()
```

- **Road**: The high number of incidents on roads could be due to several factors, such as more exposure and visibility of potential targets, less controlled environment compared to other locations, vulnerable transportation of valuable goods or information, etc.

## Gender Distribution of Affected Individuals

Understanding how security incidents affect different gender groups provides important insights into vulnerability patterns and protection needs.

```{python}
#| label: gender-analysis
#| echo: false
gender_cols = ['gender_male', 'gender_female']

gender_totals = {
    'Gender': ['Male', 'Female'],
    'Count': [
        df['gender_male'].sum(),
        df['gender_female'].sum()
    ]
}

gender_df = pd.DataFrame(gender_totals)

fig_gender = px.bar(
    gender_df,
    x='Gender',
    y='Count',
    title='Gender Distribution of Affected Individuals',
    height=450
)

fig_gender.update_traces(marker_color=palette["primary"])

fig_gender.update_layout(
    xaxis_title=None,
    yaxis_title="Number of Individuals"
)

fig_gender.show()
```

### Analysis of Gender Patterns

The gender distribution of individuals affected by security incidents reveals several significant patterns:

### Male Predominance

-   Males constitute the majority of individuals affected by security incidents
-   The disparity may reflect different exposure levels due to gender roles in some contexts

### Contributing Factors

1.  **Occupational Exposure**: Males may be overrepresented in certain high-risk professions. Armed groups may specifically target men for recruitment, detention, or elimination as potential threats.
2.  **Mobility Patterns**: Gender differences in freedom of movement may affect exposure to risks.
3.  **Targeting Patterns**: In some contexts, males may be specifically targeted.
4.  **Reporting Biases**: Incidents affecting females may be underreported in some settings. This data may underrepresent violence against women, particularly sexual violence, is often underreported in conflict zones due to stigma and limited access to reporting mechanisms.

