{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Security Incidents in Syrian Arab Republic: Trends and Patterns\"\n",
        "format:\n",
        "  html:\n",
        "    toc: true\n",
        "    toc-depth: 3\n",
        "    code-fold: true\n",
        "    number-sections: true\n",
        "    theme: cosmo\n",
        "    fig-width: 9\n",
        "    fig-height: 6\n",
        "    fig-dpi: 300\n",
        "    self-contained: true\n",
        "bibliography: references.bib\n",
        "execute:\n",
        "  warning: false\n",
        "  message: false\n",
        "---\n",
        "\n",
        "\n",
        "<style>\n",
        ".typing-line {\n",
        "  font-family: monospace;\n",
        "  overflow: hidden;\n",
        "  white-space: nowrap;\n",
        "  border-right: .15em solid #000;\n",
        "  width: 0;\n",
        "  display: block;\n",
        "  animation: typing 2s steps(20, end) forwards;\n",
        "  /* Only type, no infinite blinking */\n",
        "}\n",
        "\n",
        ".typing-line:nth-child(2) {\n",
        "  animation-delay: 2s;\n",
        "}\n",
        "\n",
        ".typing-line:nth-child(3) {\n",
        "  animation-delay: 4s;\n",
        "}\n",
        "\n",
        ".typing-line:nth-child(4) {\n",
        "  animation-delay: 6s;\n",
        "}\n",
        "\n",
        "@keyframes typing {\n",
        "  from { width: 0 }\n",
        "  to { width: 100% }\n",
        "}\n",
        "</style>\n"
      ],
      "id": "9207f2a7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: setup\n",
        "#| include: false\n",
        "#| echo: false\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import folium\n",
        "from folium.plugins import MarkerCluster\n",
        "from matplotlib.colors import LinearSegmentedColormap\n",
        "import warnings\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go\n",
        "from IPython.display import display\n",
        "from scipy import stats\n",
        "\n",
        "plt.rcParams['figure.figsize'] = (10, 6)\n",
        "warnings.filterwarnings('ignore', category=FutureWarning)\n",
        "sns.set_theme(style=\"whitegrid\")\n",
        "\n",
        "palette = {\"primary\": \"#FFBD59\", \"secondary\": \"#64C1FF\", \"danger\": \"#FF5252\"}\n",
        "\n",
        "df = pd.read_csv(\"data/security_incidents_cleaned.csv\")\n",
        "country_data = df[df['country'] == 'Syrian Arab Republic']"
      ],
      "id": "setup",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "![](images/syriapic.png)\n"
      ],
      "id": "76328ec9"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "from IPython.display import HTML\n",
        "\n",
        "killed = int(country_data['nationals_killed'].sum() + country_data['internationals_killed'].sum())\n",
        "wounded = int(country_data['nationals_wounded'].sum() + country_data['internationals_wounded'].sum())\n",
        "kidnapped = int(country_data['nationals_kidnapped'].sum() + country_data['internationals_kidnapped'].sum())\n",
        "\n",
        "from IPython.display import HTML\n",
        "\n",
        "html = f\"\"\"\n",
        "<div>\n",
        "  <span class=\"typing-line\">In the Syrian Arab Republic...</span>\n",
        "  <span class=\"typing-line\">{killed} humanitarian workers have died,</span>\n",
        "  <span class=\"typing-line\">{wounded} humanitarian workers have been wounded,</span>\n",
        "  <span class=\"typing-line\">{kidnapped} humanitarian workers have been kidnapped.</span>\n",
        "</div>\n",
        "\"\"\"\n",
        "\n",
        "HTML(html)"
      ],
      "id": "448bffe5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Executive Summary\n",
        "\n",
        "![](images/syria.png){width=200px}\n",
        "\n",
        "\n",
        "This report examines patterns in security incidents affecting humanitarian workers in the Syrian Arab Republic over more than a decade of conflict. Violence has shifted alongside major geopolitical eventsâ€”from the Syrian uprising and rise of ISIS to the collapse of the Assad regime in 2024. \n",
        "\n",
        "Key findings include:\n",
        "\n",
        "- Aerial bombardment and shelling are the most frequent attack methods, reflecting state-driven warfare and urban conflict.\n",
        "- Combat and crossfire dominate the context, indicating that most incidents occur near frontlines rather than through targeted violence.\n",
        "- Ambushes and raids continue to pose risks, especially during movement through contested areas.\n",
        "- National staff face disproportionate risk, with the vast majority of casualties across all categories.\n",
        "- High-impact incidents are concentrated at project sites and compounds, reinforcing the need for fixed-site preparedness.\n",
        "\n",
        "These trends highlight the urgency of conflict-sensitive planning, improved duty-of-care for national staff, and sustained policy advocacy to protect humanitarian access in Syria.\n",
        "\n",
        "# Background: The Conflict\n",
        "\n",
        "## Historical Context\n",
        "\n",
        "The Syrian conflict represents one of the most devastating and complex crises of the 21st century. Beginning as peaceful pro-democracy protests in 2011 during the Arab Spring, it rapidly escalated into a full-scale civil war when the Bashar al-Assad regime responded with violent crackdowns [@cfr_syria]. The conflict evolved into a multi-sided proxy war with international powers backing different factions:\n",
        "\n",
        "-   **2011**: Protests against Assad's authoritarian regime met with violent government response\n",
        "-   **2012-2013**: Formation of rebel groups and escalation to full civil war\n",
        "-   **2014-2015**: Rise of ISIS capturing significant Syrian territory\n",
        "-   **2015**: Russian military intervention supporting the Assad regime\n",
        "-   **2016-2019**: Government forces recapture key cities including Aleppo and eastern Ghouta\n",
        "-   **2019-2020**: Turkish operations against Kurdish forces in northern Syria\n",
        "-   **2020-2023**: Relatively frozen conflict lines with occasional flare-ups\n",
        "\n",
        "## Recent Escalation\n",
        "\n",
        "The Syrian conflict entered a dramatic new phase in late 2024 with the sudden collapse of the Assad regime after 50 years of family rule. This upheaval has fundamentally altered the dynamics of the war:\n",
        "\n",
        "-   **November 30, 2024**: Rebel forces led by Hayat Tahrir al-Sham (HTS) and the Turkish-backed Syrian National Army (SNA) seized Aleppo\n",
        "-   **December 8, 2024**: Damascus fell to rebel forces, ending the Assad dynasty with Bashar al-Assad fleeing to Moscow\n",
        "-   **600,000+** estimated deaths since the beginning of the conflict\n",
        "-   **6.9 million** internally displaced persons\n",
        "-   **5.4 million** refugees abroad\n",
        "-   Multiple concurrent conflicts continuing across Syrian territory:\n",
        "    - Kurdish forces clashing with Arab tribes in northeast\n",
        "    - Islamic State maintaining presence and launching attacks\n",
        "    - Israeli strikes against Iranian and Syrian military positions\n",
        "    - Iran-backed militias targeting U.S. forces in eastern Syria\n",
        "\n",
        "<h1>Map of Incidents <img src=\"images/map.png\" width=\"60px\" style=\"vertical-align:middle; margin-left:10px;\"></h1>\n"
      ],
      "id": "cebf94a9"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "\n",
        "icon_path = \"images/hazard2.png\"\n",
        "valid_points = country_data[country_data['latitude'].notna() & country_data['longitude'].notna()]\n",
        "\n",
        "country_map = folium.Map(location=[31.9, 35.2], zoom_start=8)\n",
        "\n",
        "coords = []\n",
        "\n",
        "for _, row in valid_points.iterrows():\n",
        "    coords.append((row['latitude'], row['longitude']))\n",
        "    \n",
        "    popup_html = f\"\"\"\n",
        "    <b>Location:</b> {row['location']}, {row['country']}<br>\n",
        "    <b>Year:</b> {row['year']}<br>\n",
        "    <b>Total Affected:</b> {row['total_affected']}<br>\n",
        "    <b>Attack Type:</b> {row.get('means_of_attack', 'Unknown')}\n",
        "    \"\"\"\n",
        "\n",
        "    icon = folium.CustomIcon(\n",
        "        icon_image=icon_path,\n",
        "        icon_size=(20, 20)\n",
        "    )\n",
        "\n",
        "    folium.Marker(\n",
        "        location=[row['latitude'], row['longitude']],\n",
        "        popup=folium.Popup(popup_html, max_width=300),\n",
        "        icon=icon\n",
        "    ).add_to(country_map)\n",
        "\n",
        "if coords:\n",
        "    country_map.fit_bounds(coords)\n",
        "\n",
        "country_map"
      ],
      "id": "f2e0cac6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Temporal Trends in Security Incidents {#sec-temporal}\n",
        "\n",
        "## Incident Frequency Over Time\n"
      ],
      "id": "cd9b26c8"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-yearly-incidents\n",
        "#| fig-cap: Security incidents in Syria from 2011 to 2025\n",
        "#| echo: false\n",
        "\n",
        "# Group incidents by year\n",
        "yearly_incidents = country_data.groupby('year').size().reset_index(name='incidents')\n",
        "\n",
        "# Create line chart\n",
        "fig = px.line(\n",
        "    yearly_incidents, \n",
        "    x='year', \n",
        "    y='incidents',\n",
        "    markers=True,\n",
        "    labels={'incidents': 'Number of Incidents', 'year': 'Year'},\n",
        "    height=500\n",
        ")\n",
        "\n",
        "# Configure layout\n",
        "fig.update_layout(\n",
        "    title=None,\n",
        "    xaxis=dict(tickmode='linear', dtick=2),\n",
        "    yaxis=dict(zeroline=True),\n",
        "    hovermode='x unified',\n",
        "    template='plotly_white'\n",
        ")\n",
        "\n",
        "# Add range slider\n",
        "fig.update_xaxes(rangeslider_visible=True)\n",
        "\n",
        "# Add event annotations\n",
        "events = [\n",
        "    {'year': 2011, 'event': 'Syrian uprising begins', 'y_position': 3},\n",
        "    {'year': 2013, 'event': 'Chemical weapons attack', 'y_position': 35},\n",
        "    {'year': 2014, 'event': 'ISIS territorial expansion', 'y_position': 28},\n",
        "    {'year': 2015, 'event': 'Russian intervention begins', 'y_position': 12},\n",
        "    {'year': 2016, 'event': 'Fall of Aleppo to regime', 'y_position': 24},\n",
        "    {'year': 2019, 'event': 'US withdraws from northeast', 'y_position': 48},\n",
        "    {'year': 2023, 'event': 'Devastating earthquake', 'y_position': 12},\n",
        "    {'year': 2024, 'event': 'Assad regime collapses', 'y_position': 17}\n",
        "]\n",
        "\n",
        "for event in events:\n",
        "    fig.add_annotation(\n",
        "        x=event['year'],\n",
        "        y=event['y_position'],\n",
        "        text=event['event'],\n",
        "        showarrow=True,\n",
        "        arrowhead=1,\n",
        "        ax=0,\n",
        "        ay=-20,\n",
        "        font=dict(size=10),\n",
        "        bgcolor=\"rgba(255,255,255,0.85)\",\n",
        "        bordercolor=\"black\",\n",
        "        borderwidth=1,\n",
        "        borderpad=3\n",
        "    )\n",
        "\n",
        "fig.show()"
      ],
      "id": "fig-yearly-incidents",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Analysis of Incident Trends\n",
        "\n",
        "The incident timeline in Syria reveals a strong link between major geopolitical events and spikes in humanitarian security threats:\n",
        "\n",
        "- **2011â€“2013:** The Syrian uprising and subsequent use of chemical weapons mark a dramatic rise in conflict intensity, with incidents peaking during ISISâ€™s territorial expansion.\n",
        "- **2015:** A sharp drop in incidents follows, coinciding with the **start of Russian intervention**, likely signaling a shift in control and tactics.\n",
        "- **2016â€“2018:** Conflict intensifies again with the **fall of Aleppo** and the **US withdrawal from northeast Syria**, resulting in the highest recorded incident levels.\n",
        "- **2020â€“2021:** A steep decline occurs as territorial control consolidates.\n",
        "- **2023â€“2024:** A brief resurgence follows the **devastating earthquake** and eventual **collapse of the Assad regime**, reflecting renewed instability.\n",
        "\n",
        "These trends highlight how international involvement, regime change, and territorial shifts consistently shape the security landscape for humanitarian operations in Syria.\n",
        "\n",
        "# Nature of Security Incidents {#sec-nature}\n",
        "\n",
        "## Predominant Attack Types\n"
      ],
      "id": "708c2719"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-attack-types\n",
        "#| fig-cap: Most common types of attacks\n",
        "#| echo: false\n",
        "\n",
        "# Analyzing means of attack\n",
        "attack_counts = country_data['means_of_attack'].value_counts().reset_index()\n",
        "attack_counts.columns = ['Attack Type', 'Count']\n",
        "attack_counts = attack_counts.sort_values('Count', ascending=False).head(10)\n",
        "\n",
        "# Create horizontal bar chart with uniform color\n",
        "fig_attacks = px.bar(\n",
        "    attack_counts,\n",
        "    y='Attack Type',\n",
        "    x='Count',\n",
        "    title=None,\n",
        "    height=500,\n",
        "    orientation='h'\n",
        ")\n",
        "\n",
        "# Set all bars to primary color\n",
        "fig_attacks.update_traces(marker_color=palette[\"secondary\"])\n",
        "\n",
        "# Configure layout\n",
        "fig_attacks.update_layout(\n",
        "    yaxis={'categoryorder': 'total ascending'},\n",
        "    xaxis_title=\"Number of Incidents\",\n",
        "    yaxis_title=None\n",
        ")\n",
        "\n",
        "fig_attacks.show()"
      ],
      "id": "fig-attack-types",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Analysis of Attack Methods\n",
        "\n",
        "Aerial bombardment is the most frequently reported attack method, followed by shelling, making Syria unique among conflict zones where indirect fire and airstrikes dominate the threat landscape. These tactics reflect state-level military engagement and urban warfare dynamics, especially during regime offensives. Shooting and kidnapping also appear prominently, pointing to both conventional ground combat and targeted abduction of humanitarian personnel. \n",
        "\n",
        "This distribution underscores the need for protective infrastructure in high-risk areas, early-warning systems during aerial campaigns, and mobility protocols to avoid exposure during bombardments and shelling.\n",
        "\n",
        "## Attack Contexts\n"
      ],
      "id": "2680420a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-attack-contexts\n",
        "#| fig-cap: Security incidents by attack context\n",
        "#| echo: false\n",
        "\n",
        "context_counts = country_data['attack_context'].value_counts().reset_index()\n",
        "context_counts.columns = ['Attack Context', 'Count']\n",
        "\n",
        "context_counts = context_counts.sort_values('Count', ascending=False)\n",
        "\n",
        "fig_context = px.bar(\n",
        "    context_counts,\n",
        "    x='Count',\n",
        "    y='Attack Context',\n",
        "    title=None,\n",
        "    height=450,\n",
        "    orientation='h'\n",
        ")\n",
        "\n",
        "fig_context.update_traces(marker_color=palette[\"secondary\"])\n",
        "\n",
        "fig_context.update_layout(\n",
        "    xaxis_title=\"Number of Incidents\",\n",
        "    yaxis_title=None,\n",
        "    yaxis=dict(categoryorder='total ascending'),  # <-- ensures most at top\n",
        "    margin=dict(l=150, r=20, t=30, b=30)\n",
        ")\n",
        "\n",
        "fig_context.show()"
      ],
      "id": "fig-attack-contexts",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Analysis of Attack Contexts\n",
        "\n",
        "Combat or crossfire is by far the most common context of security incidents in Syria, reflecting the countryâ€™s prolonged urban warfare and front-line volatility. This indicates that many humanitarian actors are unintentionally caught in large-scale hostilities, rather than being directly targeted.\n",
        "\n",
        "## Location of Attack\n"
      ],
      "id": "5e308a1d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-attack-locations\n",
        "#| fig-cap: Most common attack locations\n",
        "#| echo: false\n",
        "\n",
        "# Get top 10 most frequent locations\n",
        "location_counts = country_data['location'].value_counts().reset_index()\n",
        "location_counts.columns = ['Location', 'Count']\n",
        "location_counts = location_counts.sort_values('Count', ascending=False).head(10)\n",
        "\n",
        "# Create bar chart\n",
        "fig_locations = px.bar(\n",
        "    location_counts,\n",
        "    y='Location',\n",
        "    x='Count',\n",
        "    title=None,\n",
        "    height=500,\n",
        "    orientation='h'\n",
        ")\n",
        "\n",
        "fig_locations.update_traces(marker_color=\"#64C1FF\")  # <- updated color\n",
        "\n",
        "fig_locations.update_layout(\n",
        "    yaxis={'categoryorder': 'total ascending'},\n",
        "    xaxis_title=\"Number of Incidents\",\n",
        "    yaxis_title=None\n",
        ")\n",
        "\n",
        "fig_locations.show()"
      ],
      "id": "fig-attack-locations",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Analysis of Attack Locations\n",
        "\n",
        "Most attacks occurred at project sites, on roads, and in public locations, highlighting the widespread insecurity across operational, transit, and civilian spaces.\n",
        "\n",
        "# Human Impact of Security Incidents {#sec-impact}\n",
        "\n",
        "## Casualties by Category\n"
      ],
      "id": "6cbfc6e4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-casualties\n",
        "#| fig-cap: Total casualties in Palestine by category\n",
        "#| echo: false\n",
        "\n",
        "# Create data for stacked bar chart\n",
        "stacked_data = {\n",
        "    'Category': ['Nationals', 'Internationals'],\n",
        "    'Killed': [\n",
        "        country_data['nationals_killed'].sum(),\n",
        "        country_data['internationals_killed'].sum()\n",
        "    ],\n",
        "    'Wounded': [\n",
        "        country_data['nationals_wounded'].sum(),\n",
        "        country_data['internationals_wounded'].sum()\n",
        "    ],\n",
        "    'Kidnapped': [\n",
        "        country_data['nationals_kidnapped'].sum(),\n",
        "        country_data['internationals_kidnapped'].sum()\n",
        "    ]\n",
        "}\n",
        "\n",
        "# Convert to DataFrame and reshape for stacking\n",
        "stacked_df = pd.DataFrame(stacked_data)\n",
        "stacked_df_long = pd.melt(\n",
        "    stacked_df,\n",
        "    id_vars=['Category'],\n",
        "    value_vars=['Killed', 'Wounded', 'Kidnapped'],\n",
        "    var_name='Status',\n",
        "    value_name='Count'\n",
        ")\n",
        "\n",
        "# Create a stacked bar chart\n",
        "fig_stacked = px.bar(\n",
        "    stacked_df_long,\n",
        "    x='Category',\n",
        "    y='Count',\n",
        "    color='Status',\n",
        "    title=None,\n",
        "    barmode='stack',\n",
        "    height=500,\n",
        "    color_discrete_map={\n",
        "        'Killed': palette[\"danger\"], \n",
        "        'Wounded': palette[\"primary\"], \n",
        "        'Kidnapped': palette[\"secondary\"]\n",
        "    }\n",
        ")\n",
        "\n",
        "# Improve layout\n",
        "fig_stacked.update_layout(\n",
        "    xaxis_title=None,\n",
        "    yaxis_title=\"Number of People\",\n",
        "    legend_title_text=None\n",
        ")\n",
        "\n",
        "fig_stacked.show()"
      ],
      "id": "fig-casualties",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Analysis of Casualty Patterns\n",
        "\n",
        "The overwhelming majority of casualties in Syria are nationals, who account for nearly all reported deaths, injuries, and kidnappings. The high number of national fatalities suggests that many incidents are either highly lethal or occur in areas with limited access to emergency care.\n",
        "\n",
        "# Major Incidents {#sec-major}\n",
        "\n",
        "## Top 5 Most Impactful Security Incidents\n"
      ],
      "id": "23795cb3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: tbl-interactive-incidents\n",
        "#| echo: false\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "from IPython.display import display, HTML\n",
        "\n",
        "if not country_data.empty and 'total_affected' in country_data.columns:\n",
        "    # Sort the entire dataset by total_affected\n",
        "    sorted_incidents = country_data.sort_values(by='total_affected', ascending=False)\n",
        "    \n",
        "    # Select display columns and rename them\n",
        "    display_cols = ['year', 'location', 'total_affected', 'total_killed', 'total_wounded', 'attack_context', 'actor_type']\n",
        "    column_names = {\n",
        "        'year': 'Year',\n",
        "        'location': 'Location',\n",
        "        'total_affected': 'Total Affected',\n",
        "        'total_killed': 'Killed',\n",
        "        'total_wounded': 'Wounded',\n",
        "        'attack_context': 'Context',\n",
        "        'actor_type': 'Actor Type'\n",
        "    }\n",
        "    \n",
        "    # Prepare the display dataframe\n",
        "    display_df = sorted_incidents[display_cols].rename(columns=column_names)\n",
        "    \n",
        "    # Create an interactive table with Plotly\n",
        "    fig = go.Figure(data=[go.Table(\n",
        "        header=dict(\n",
        "            values=list(column_names.values()),\n",
        "            fill_color='#A1083B',\n",
        "            align='left',\n",
        "            font=dict(color='white', size=14),\n",
        "            height=40\n",
        "        ),\n",
        "        cells=dict(\n",
        "            values=[display_df[col] for col in display_df.columns],\n",
        "            fill_color=[['#F99301' if i < 5 else '#f9f9f9' for i in range(len(display_df))]],\n",
        "            align='left',\n",
        "            font=dict(color=['black' if i < 5 else '#333333' for i in range(len(display_df))], size=12),\n",
        "            height=30\n",
        "        )\n",
        "    )])\n",
        "    \n",
        "    # Update layout for better appearance with fixed height for scrolling\n",
        "    fig.update_layout(\n",
        "        title={\n",
        "            'text': 'Security Incidents Ranked by Impact',\n",
        "            'y': 0.98,\n",
        "            'x': 0.5,\n",
        "            'xanchor': 'center',\n",
        "            'yanchor': 'top',\n",
        "            'font': {'size': 20}\n",
        "        },\n",
        "        margin=dict(l=20, r=20, t=60, b=20),\n",
        "        height=600,  # Fixed height to enable scrolling\n",
        "        width=900\n",
        "    )\n",
        "    \n",
        "    # Add a note about the highlighted rows\n",
        "    fig.add_annotation(\n",
        "        x=0,\n",
        "        y=-0.15,\n",
        "        xref='paper',\n",
        "        yref='paper',\n",
        "        text=\"<i>Top 5 most impactful incidents are highlighted. Scroll to view all incidents.</i>\",\n",
        "        showarrow=False,\n",
        "        font=dict(size=12),\n",
        "        align='left'\n",
        "    )\n",
        "    \n",
        "    # Save and display the figure\n",
        "    fig.write_html(\"images/interactive_incidents_table.html\",\n",
        "                  include_plotlyjs='cdn',\n",
        "                  config={'scrollZoom': True})\n",
        "    fig.show()"
      ],
      "id": "tbl-interactive-incidents",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Analysis of Major Incidents\n",
        "\n",
        "The most severe incidents in Syria primarily occurred at **project sites**, with nearly all involving **combat or crossfire**:\n",
        "\n",
        "- The deadliest incidents occurred in **2016 and 2017**, each resulting in 9 fatalities with no survivorsâ€”highlighting the intensity of direct armed clashes.\n",
        "- The highest total casualty incident in **2013** left 11 people wounded at a project site, suggesting exposure to indiscriminate violence rather than targeted attack.\n",
        "\n",
        "These events emphasize the critical need for conflict-sensitive planning, real-time situational awareness, and investment in protective infrastructure at operational sites.\n",
        "\n",
        "For more detailed information on the Syrian conflict timeline, see the [Council on Foreign Relations Conflict Tracker](https://www.cfr.org/global-conflict-tracker/conflict/conflict-syria).\n",
        "\n",
        "# Conclusions and Recommendations {#sec-conclusions}\n",
        "\n",
        "## Key Findings\n",
        "\n",
        "1. **Incident patterns mirror key conflict events**, including spikes during ISIS expansion, regime offensives, and the 2024 collapse of Assad's government.\n",
        "2. **Aerial attacks and indirect fire dominate the attack profile**, setting Syria apart from ground-focused conflicts.\n",
        "3. **Most incidents occur during combat or crossfire**, rather than direct targeting of humanitarian actors.\n",
        "4. **Nationals account for the vast majority of deaths, injuries, and kidnappings**, indicating significant disparities in exposure and risk.\n",
        "5. **Project sites and offices are common locations for major incidents**, especially in heavily militarized zones.\n",
        "\n",
        "## Recommendations\n",
        "\n",
        "### For Security Planning \n",
        "\n",
        "- Map and monitor high-risk areas near frontlines, with live updates on aerial activity and shelling zones.\n",
        "- Establish hardened infrastructure and underground shelters at compounds and project sites.\n",
        "- Develop rapid evacuation protocols tailored to conflict escalation patterns.\n",
        "\n",
        "### For Humanitarian Organizations\n",
        "\n",
        "- Provide personal protective equipment and conflict awareness training to national staff in volatile areas.\n",
        "- Strengthen coordination with local actors and communities to improve incident reporting and early warnings.\n",
        "- Scale up remote programming in areas with ongoing aerial bombardment or crossfire.\n",
        "\n",
        "### For Future Research\n",
        "\n",
        "- Analyze how territorial control shifts impact humanitarian security in real time.\n",
        "- Investigate long-term mental health outcomes for frontline national staff.\n",
        "- Study the role of infrastructure damage (e.g., hospitals, water, roads) on aid delivery and mobility."
      ],
      "id": "c00c3da4"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/opt/miniconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}