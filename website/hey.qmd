---
title: "Missing Data Patterns in Humanitarian Security Incidents"
format:
  html:
    toc: true
    toc-depth: 3
    code-fold: true
    number-sections: true
    theme: cosmo
    fig-width: 5
    fig-height: 3
    fig-dpi: 150
    self-contained: true
execute:
  warning: false
  message: false
---

```{python}
#| label: setup
#| include: false

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings

plt.rcParams['figure.figsize'] = (6, 4)
warnings.filterwarnings('ignore', category=FutureWarning)
sns.set_theme(style="whitegrid")
```

```{python}
#| include: false

import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

plt.rcParams['font.size'] = 11
plt.rcParams['axes.titlesize'] = 10
plt.rcParams['axes.labelsize'] = 8

palette = {
    "primary": "#1D70B8",
    "secondary": "#FFBD59",
    "tertiary": "#F2645A",
    "neutral": "#7A868C"
}
```

```{python}
df = pd.read_csv("data/security_incidents_cleaned.csv")
countries = [
    "Occupied Palestinian Territories", "Afghanistan", "DR Congo",
    "Syrian Arab Republic", "Somalia", "Mali", "South Sudan", "Sudan"
]
df_filtered = df[df['country'].isin(countries)]
country_totals = df_filtered.groupby('country').size().to_dict()
```

## 1. Bar Chart of Unknown Values by Column and Country

```{python}

columns_to_check = [
    "means_of_attack", "attack_context", "location",
    "motive", "actor_type", "actor_name"
]

results = pd.DataFrame(index=countries, columns=columns_to_check, dtype=float)
value = "Unknown"
for country in countries:
    country_data = df_filtered[df_filtered['country'] == country]
    for col in columns_to_check:
        count = country_data[country_data[col] == value].shape[0]
        results.loc[country, col] = (count / len(country_data)) * 100 if len(country_data) else 0.0

results['average'] = results[columns_to_check].mean(axis=1)
results = results.sort_values('average', ascending=False)

plt.figure(figsize=(5, 4))
results[columns_to_check].plot(kind='bar', ax=plt.gca(), width=0.8)
plt.plot(range(len(results)), results['average'], 'ko-', linewidth=2, markersize=8, label='Average')
plt.title(f"Percentage of '{value}' Values Across All Columns by Country")
plt.xlabel("Country")
plt.ylabel(f"% '{value}' Values")
plt.legend(title="Column", bbox_to_anchor=(1.01, 1), loc='upper left', prop={'size': 8})
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

```

## 2. Heatmap of Unknown Values by Column and Country

```{python}
heatmap_data = pd.DataFrame(index=countries, columns=columns_to_check, dtype=float)
for country in countries:
    country_data = df_filtered[df_filtered['country'] == country]
    for col in columns_to_check:
        count = country_data[country_data[col] == value].shape[0]
        heatmap_data.loc[country, col] = (count / len(country_data)) * 100 if len(country_data) else 0.0

heatmap_data['average'] = heatmap_data[columns_to_check].mean(axis=1)
heatmap_data = heatmap_data.sort_values('average', ascending=False)

plt.figure(figsize=(5, 4))
sns.heatmap(
    heatmap_data[columns_to_check],
    annot=False,  # disables annotations
    cmap="YlOrRd",
    linewidths=0.5
)
plt.title("% 'Unknown' Values by Country and Column")
plt.tight_layout()
plt.show()

```

## 3. Data Completeness Stacked Bar Chart

```{python}
df_filtered["unknown_count"] = df_filtered[columns_to_check].apply(lambda row: (row == "Unknown").sum(), axis=1)
country_unknown = df_filtered.groupby('country')['unknown_count'].sum()
total_possible = df_filtered.groupby('country').size() * len(columns_to_check)
unknown_pct = (country_unknown / total_possible * 100).reindex(countries)
known_pct = 100 - unknown_pct

sorted_countries = known_pct.sort_values().index
stacked_data = pd.DataFrame({
    'country': sorted_countries,
    'Known': known_pct[sorted_countries].values,
    'Unknown': unknown_pct[sorted_countries].values
})

plot_data = pd.melt(stacked_data, id_vars=['country'], value_vars=['Known', 'Unknown'], var_name='Status', value_name='Percent')

plt.figure(figsize=(5, 4))
sns.barplot(data=plot_data, x='Percent', y='country', hue='Status', palette=['#1D70B8', '#F2645A'])
plt.title("Data Completeness by Country (%)")
plt.tight_layout()
plt.show()
```

## 5. Total Missing Data by Country

```{python}
country_stats = []
for country in countries:
    country_data = df_filtered[df_filtered['country'] == country]
    total_incidents = len(country_data)
    total_unknown = country_data['unknown_count'].sum()
    total_possible = total_incidents * len(columns_to_check)
    pct_unknown = (total_unknown / total_possible) * 100
    country_stats.append({
        'country': country,
        'percent_unknown': pct_unknown
    })

stats_df = pd.DataFrame(country_stats).sort_values('percent_unknown', ascending=False)

plt.figure(figsize=(5,4))
plt.barh(stats_df['country'], stats_df['percent_unknown'], color='#F2645A', alpha=0.8)
plt.title("Overall % of Unknown Values by Country")
plt.xlabel("% Unknown")
plt.tight_layout()
plt.show()
```